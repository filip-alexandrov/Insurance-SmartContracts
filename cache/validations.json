{
  "version": "3.2",
  "log": [
    {
      "IERC20": {
        "src": "contracts\\Insure.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Insure": {
        "src": "contracts\\Insure.sol:43",
        "version": {
          "withMetadata": "4fd0cd788ffd0f7062f79ffd60ea7c201c40b71588178075dbc80b5ce889b6b4",
          "withoutMetadata": "12318450b17c199114af8a791c71170a4895027dd7e69ee2cc55e9bda908d4e0",
          "linkedWithoutMetadata": "12318450b17c199114af8a791c71170a4895027dd7e69ee2cc55e9bda908d4e0"
        },
        "inherit": [],
        "libraries": [
          "PRBMathUD60x18"
        ],
        "methods": [
          "(uint256[],address)",
          "setOracle(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "setProviderInfo(uint256,uint256,uint256,uint256)",
          "deleteAllProviderPolicies(uint256)",
          "openPolicy(address,uint256,uint256,uint256)",
          "checkPolicies(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Insure",
            "src": "contracts\\Insure.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:49"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:50"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:51"
            },
            {
              "label": "expiryDates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:52"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:70"
            },
            {
              "label": "activeTakersPolicies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:95"
            },
            {
              "label": "activeProviderTakers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:98"
            },
            {
              "label": "providers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(ActiveTakerData)255_storage)dyn_storage": {
              "label": "struct Insure.ActiveTakerData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)": {
              "label": "mapping(address => struct Insure.ActiveTakerData[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Insure.ProviderData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProviderData)273_storage)": {
              "label": "mapping(uint256 => struct Insure.ProviderData)",
              "numberOfBytes": "32"
            },
            "t_struct(ActiveTakerData)255_storage": {
              "label": "struct Insure.ActiveTakerData",
              "members": [
                {
                  "label": "provider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ProviderData)273_storage": {
              "label": "struct Insure.ProviderData",
              "members": [
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "customOracle": {
        "src": "contracts\\Insure.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiryPriceLevel(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts\\Insure.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Insure": {
        "src": "contracts\\Insure.sol:43",
        "version": {
          "withMetadata": "6acd542ba709cad55e63c551c44756b944fa7bf66c8e9243ccddcd5f680cc421",
          "withoutMetadata": "a5f3e2f672951660cebc909943c466b891e9ad907b35082d6a5a9755490382d8",
          "linkedWithoutMetadata": "a5f3e2f672951660cebc909943c466b891e9ad907b35082d6a5a9755490382d8"
        },
        "inherit": [],
        "libraries": [
          "PRBMathUD60x18"
        ],
        "methods": [
          "(uint256[],address)",
          "setOracle(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "setProviderInfo(uint256,uint256,uint256,uint256)",
          "deleteAllProviderPolicies(uint256)",
          "openPolicy(address,uint256,uint256,uint256)",
          "checkPolicies(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Insure",
            "src": "contracts\\Insure.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:49"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:50"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:51"
            },
            {
              "label": "expiryDates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:52"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:70"
            },
            {
              "label": "activeTakersPolicies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:95"
            },
            {
              "label": "activeProviderTakers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:98"
            },
            {
              "label": "providers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(ActiveTakerData)255_storage)dyn_storage": {
              "label": "struct Insure.ActiveTakerData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)": {
              "label": "mapping(address => struct Insure.ActiveTakerData[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Insure.ProviderData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProviderData)273_storage)": {
              "label": "mapping(uint256 => struct Insure.ProviderData)",
              "numberOfBytes": "32"
            },
            "t_struct(ActiveTakerData)255_storage": {
              "label": "struct Insure.ActiveTakerData",
              "members": [
                {
                  "label": "provider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ProviderData)273_storage": {
              "label": "struct Insure.ProviderData",
              "members": [
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "customOracle": {
        "src": "contracts\\Insure.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiryPriceLevel(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts\\Insure.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Insure": {
        "src": "contracts\\Insure.sol:43",
        "version": {
          "withMetadata": "c60c6aa322282baf341901ad226d18280f60290b567146cef8fdf6f1a9959c30",
          "withoutMetadata": "cbd18d5cca47b2eb792426d47d7f80f9152ee39bc40f0b8a292b9210009c61f8",
          "linkedWithoutMetadata": "cbd18d5cca47b2eb792426d47d7f80f9152ee39bc40f0b8a292b9210009c61f8"
        },
        "inherit": [],
        "libraries": [
          "PRBMathUD60x18",
          "console"
        ],
        "methods": [
          "(uint256[],address)",
          "setOracle(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "setProviderInfo(uint256,uint256,uint256,uint256)",
          "deleteAllProviderPolicies(uint256)",
          "openPolicy(address,uint256,uint256,uint256)",
          "checkPolicies(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Insure",
            "src": "contracts\\Insure.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:49"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:50"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:51"
            },
            {
              "label": "expiryDates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:52"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:70"
            },
            {
              "label": "activeTakersPolicies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:95"
            },
            {
              "label": "activeProviderTakers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:98"
            },
            {
              "label": "providers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(ActiveTakerData)255_storage)dyn_storage": {
              "label": "struct Insure.ActiveTakerData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)": {
              "label": "mapping(address => struct Insure.ActiveTakerData[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Insure.ProviderData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProviderData)273_storage)": {
              "label": "mapping(uint256 => struct Insure.ProviderData)",
              "numberOfBytes": "32"
            },
            "t_struct(ActiveTakerData)255_storage": {
              "label": "struct Insure.ActiveTakerData",
              "members": [
                {
                  "label": "provider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ProviderData)273_storage": {
              "label": "struct Insure.ProviderData",
              "members": [
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "customOracle": {
        "src": "contracts\\Insure.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiryPriceLevel(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts\\Insure.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Insure": {
        "src": "contracts\\Insure.sol:43",
        "version": {
          "withMetadata": "b9aadd4a61c5beb6f6a8144e3cebc2f1f7ad35e5b14e585c7d13961175e2bd72",
          "withoutMetadata": "d4fc0d415ed23725759f66b51b79f9da51e4be6dc3c820857296ce1bc0d5a284",
          "linkedWithoutMetadata": "d4fc0d415ed23725759f66b51b79f9da51e4be6dc3c820857296ce1bc0d5a284"
        },
        "inherit": [],
        "libraries": [
          "PRBMathUD60x18",
          "console"
        ],
        "methods": [
          "(uint256[],address)",
          "setOracle(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "setProviderInfo(uint256,uint256,uint256,uint256)",
          "getProviderInfo(address,uint256)",
          "deleteAllProviderPolicies(uint256)",
          "openPolicy(address,uint256,uint256,uint256)",
          "checkPolicies(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Insure",
            "src": "contracts\\Insure.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:49"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:50"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:51"
            },
            {
              "label": "expiryDates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:52"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:70"
            },
            {
              "label": "activeTakersPolicies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:95"
            },
            {
              "label": "activeProviderTakers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:98"
            },
            {
              "label": "providers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(ActiveTakerData)255_storage)dyn_storage": {
              "label": "struct Insure.ActiveTakerData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)": {
              "label": "mapping(address => struct Insure.ActiveTakerData[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Insure.ProviderData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProviderData)273_storage)": {
              "label": "mapping(uint256 => struct Insure.ProviderData)",
              "numberOfBytes": "32"
            },
            "t_struct(ActiveTakerData)255_storage": {
              "label": "struct Insure.ActiveTakerData",
              "members": [
                {
                  "label": "provider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ProviderData)273_storage": {
              "label": "struct Insure.ProviderData",
              "members": [
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "customOracle": {
        "src": "contracts\\Insure.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiryPriceLevel(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts\\Insure.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Insure": {
        "src": "contracts\\Insure.sol:43",
        "version": {
          "withMetadata": "702341145ea60a5abde1cb9e2250c4d8eeb0f1a9b92f108b269524dc517e5199",
          "withoutMetadata": "acc8925b45c7198cf5a8b661dea185f006da6012d49529fafb9120f67b8e8409",
          "linkedWithoutMetadata": "acc8925b45c7198cf5a8b661dea185f006da6012d49529fafb9120f67b8e8409"
        },
        "inherit": [],
        "libraries": [
          "PRBMathUD60x18",
          "console"
        ],
        "methods": [
          "(uint256[],address)",
          "setOracle(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "setProviderInfo(uint256,uint256,uint256,uint256)",
          "getProviderInfo(address,uint256)",
          "deleteAllProviderPolicies(uint256)",
          "openPolicy(address,uint256,uint256,uint256)",
          "checkPolicies(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Insure",
            "src": "contracts\\Insure.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:49"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:50"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:51"
            },
            {
              "label": "expiryDates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:52"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:70"
            },
            {
              "label": "activeTakersPolicies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:95"
            },
            {
              "label": "activeProviderTakers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:98"
            },
            {
              "label": "providers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(ActiveTakerData)255_storage)dyn_storage": {
              "label": "struct Insure.ActiveTakerData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)": {
              "label": "mapping(address => struct Insure.ActiveTakerData[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Insure.ProviderData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProviderData)273_storage)": {
              "label": "mapping(uint256 => struct Insure.ProviderData)",
              "numberOfBytes": "32"
            },
            "t_struct(ActiveTakerData)255_storage": {
              "label": "struct Insure.ActiveTakerData",
              "members": [
                {
                  "label": "provider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ProviderData)273_storage": {
              "label": "struct Insure.ProviderData",
              "members": [
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "customOracle": {
        "src": "contracts\\Insure.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiryPriceLevel(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts\\Insure.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Insure": {
        "src": "contracts\\Insure.sol:43",
        "version": {
          "withMetadata": "c60c6aa322282baf341901ad226d18280f60290b567146cef8fdf6f1a9959c30",
          "withoutMetadata": "cbd18d5cca47b2eb792426d47d7f80f9152ee39bc40f0b8a292b9210009c61f8",
          "linkedWithoutMetadata": "cbd18d5cca47b2eb792426d47d7f80f9152ee39bc40f0b8a292b9210009c61f8"
        },
        "inherit": [],
        "libraries": [
          "PRBMathUD60x18",
          "console"
        ],
        "methods": [
          "(uint256[],address)",
          "setOracle(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "setProviderInfo(uint256,uint256,uint256,uint256)",
          "deleteAllProviderPolicies(uint256)",
          "openPolicy(address,uint256,uint256,uint256)",
          "checkPolicies(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Insure",
            "src": "contracts\\Insure.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:49"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:50"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:51"
            },
            {
              "label": "expiryDates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:52"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:70"
            },
            {
              "label": "activeTakersPolicies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:95"
            },
            {
              "label": "activeProviderTakers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:98"
            },
            {
              "label": "providers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(ActiveTakerData)255_storage)dyn_storage": {
              "label": "struct Insure.ActiveTakerData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(ActiveTakerData)255_storage)dyn_storage)": {
              "label": "mapping(address => struct Insure.ActiveTakerData[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)273_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Insure.ProviderData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProviderData)273_storage)": {
              "label": "mapping(uint256 => struct Insure.ProviderData)",
              "numberOfBytes": "32"
            },
            "t_struct(ActiveTakerData)255_storage": {
              "label": "struct Insure.ActiveTakerData",
              "members": [
                {
                  "label": "provider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ProviderData)273_storage": {
              "label": "struct Insure.ProviderData",
              "members": [
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "customOracle": {
        "src": "contracts\\Insure.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiryPriceLevel(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "CustomOracle": {
        "src": "contracts\\CustomOracle.sol:7",
        "version": {
          "withMetadata": "17132b9e4987a4cc79c215d3e4434d0530418d3720417843ed0a491bddd6dad8",
          "withoutMetadata": "4df4489ddf4750e7404dd10d38961bfa45b66c912414b00ea79c32dfafe5212d",
          "linkedWithoutMetadata": "4df4489ddf4750e7404dd10d38961bfa45b66c912414b00ea79c32dfafe5212d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256[])",
          "setExpiryPrice(uint256,uint256)",
          "getExpiryPriceLevel(uint256)",
          "makeCorrection(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CustomOracle",
            "src": "contracts\\CustomOracle.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "CustomOracle",
              "src": "contracts\\CustomOracle.sol:8"
            },
            {
              "label": "expiryDatePrice",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "CustomOracle",
              "src": "contracts\\CustomOracle.sol:9"
            },
            {
              "label": "expiryAvailable",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "CustomOracle",
              "src": "contracts\\CustomOracle.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\Insure.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Insure": {
        "src": "contracts\\Insure.sol:43",
        "version": {
          "withMetadata": "6acd542ba709cad55e63c551c44756b944fa7bf66c8e9243ccddcd5f680cc421",
          "withoutMetadata": "a5f3e2f672951660cebc909943c466b891e9ad907b35082d6a5a9755490382d8",
          "linkedWithoutMetadata": "a5f3e2f672951660cebc909943c466b891e9ad907b35082d6a5a9755490382d8"
        },
        "inherit": [],
        "libraries": [
          "PRBMathUD60x18"
        ],
        "methods": [
          "(uint256[],address)",
          "setOracle(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "setProviderInfo(uint256,uint256,uint256,uint256)",
          "deleteAllProviderPolicies(uint256)",
          "openPolicy(address,uint256,uint256,uint256)",
          "checkPolicies(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Insure",
            "src": "contracts\\Insure.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:49"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:50"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:51"
            },
            {
              "label": "expiryDates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:52"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:70"
            },
            {
              "label": "activeTakersPolicies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(ActiveTakerData)423_storage)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:95"
            },
            {
              "label": "activeProviderTakers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:98"
            },
            {
              "label": "providers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)441_storage))",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(ActiveTakerData)423_storage)dyn_storage": {
              "label": "struct Insure.ActiveTakerData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(ActiveTakerData)423_storage)dyn_storage)": {
              "label": "mapping(address => struct Insure.ActiveTakerData[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)441_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Insure.ProviderData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProviderData)441_storage)": {
              "label": "mapping(uint256 => struct Insure.ProviderData)",
              "numberOfBytes": "32"
            },
            "t_struct(ActiveTakerData)423_storage": {
              "label": "struct Insure.ActiveTakerData",
              "members": [
                {
                  "label": "provider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ProviderData)441_storage": {
              "label": "struct Insure.ProviderData",
              "members": [
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "customOracle": {
        "src": "contracts\\Insure.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiryPriceLevel(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts\\Insure.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Insure": {
        "src": "contracts\\Insure.sol:43",
        "version": {
          "withMetadata": "d0ea7e68c7363cdfaca4433834aa176dfbf36397ae23d1c209b7f3b7fc650478",
          "withoutMetadata": "f68f6cc87dc0506de4fc2a2f4bee05d3711967ce0fd481c4508ffbb3067637f1",
          "linkedWithoutMetadata": "f68f6cc87dc0506de4fc2a2f4bee05d3711967ce0fd481c4508ffbb3067637f1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256[],address)",
          "setOracle(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "setProviderInfo(uint256,uint256,uint256,uint256)",
          "deleteAllProviderPolicies(uint256)",
          "openPolicy(address,uint256,uint256,uint256)",
          "checkPolicies(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Insure",
            "src": "contracts\\Insure.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:47"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:48"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:49"
            },
            {
              "label": "expiryDates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:50"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:68"
            },
            {
              "label": "activeTakersPolicies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(ActiveTakerData)252_storage)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:93"
            },
            {
              "label": "activeProviderTakers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:96"
            },
            {
              "label": "providers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)270_storage))",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:102"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(ActiveTakerData)252_storage)dyn_storage": {
              "label": "struct Insure.ActiveTakerData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(ActiveTakerData)252_storage)dyn_storage)": {
              "label": "mapping(address => struct Insure.ActiveTakerData[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)270_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Insure.ProviderData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProviderData)270_storage)": {
              "label": "mapping(uint256 => struct Insure.ProviderData)",
              "numberOfBytes": "32"
            },
            "t_struct(ActiveTakerData)252_storage": {
              "label": "struct Insure.ActiveTakerData",
              "members": [
                {
                  "label": "provider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ProviderData)270_storage": {
              "label": "struct Insure.ProviderData",
              "members": [
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "customOracle": {
        "src": "contracts\\Insure.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiryPriceLevel(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts\\Insure.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Insure": {
        "src": "contracts\\Insure.sol:43",
        "version": {
          "withMetadata": "075d9777904ca3fa559b1cb5568a5500ad2c01d9e51efb410a8452598b2e4186",
          "withoutMetadata": "cd067ce03ec3cece15ea8f5cb6187c04186f80da0e6eb67b33ef300083718862",
          "linkedWithoutMetadata": "cd067ce03ec3cece15ea8f5cb6187c04186f80da0e6eb67b33ef300083718862"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256[],address)",
          "setOracle(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "setProviderInfo(uint256,uint256,uint256,uint256)",
          "deleteAllProviderPolicies(uint256)",
          "openPolicy(address,uint256,uint256,uint256)",
          "checkPolicies(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Insure",
            "src": "contracts\\Insure.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:47"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:48"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:49"
            },
            {
              "label": "expiryDates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:50"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:68"
            },
            {
              "label": "activeTakersPolicies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(ActiveTakerData)252_storage)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:93"
            },
            {
              "label": "activeProviderTakers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:96"
            },
            {
              "label": "providers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)270_storage))",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:102"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(ActiveTakerData)252_storage)dyn_storage": {
              "label": "struct Insure.ActiveTakerData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(ActiveTakerData)252_storage)dyn_storage)": {
              "label": "mapping(address => struct Insure.ActiveTakerData[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)270_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Insure.ProviderData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProviderData)270_storage)": {
              "label": "mapping(uint256 => struct Insure.ProviderData)",
              "numberOfBytes": "32"
            },
            "t_struct(ActiveTakerData)252_storage": {
              "label": "struct Insure.ActiveTakerData",
              "members": [
                {
                  "label": "provider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ProviderData)270_storage": {
              "label": "struct Insure.ProviderData",
              "members": [
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "customOracle": {
        "src": "contracts\\Insure.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiryPriceLevel(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts\\Insure.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Insure": {
        "src": "contracts\\Insure.sol:43",
        "version": {
          "withMetadata": "3ac2ffe39e4174a8429563ec45e9ac9eb343eabdc8601536cc96412128bd42c0",
          "withoutMetadata": "cd067ce03ec3cece15ea8f5cb6187c04186f80da0e6eb67b33ef300083718862",
          "linkedWithoutMetadata": "cd067ce03ec3cece15ea8f5cb6187c04186f80da0e6eb67b33ef300083718862"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256[],address)",
          "setOracle(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "setProviderInfo(uint256,uint256,uint256,uint256)",
          "deleteAllProviderPolicies(uint256)",
          "openPolicy(address,uint256,uint256,uint256)",
          "checkPolicies(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Insure",
            "src": "contracts\\Insure.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:47"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:48"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:49"
            },
            {
              "label": "expiryDates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:50"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:85"
            },
            {
              "label": "activeTakersPolicies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(ActiveTakerData)252_storage)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:93"
            },
            {
              "label": "activeProviderTakers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:96"
            },
            {
              "label": "providers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)270_storage))",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:102"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(ActiveTakerData)252_storage)dyn_storage": {
              "label": "struct Insure.ActiveTakerData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(ActiveTakerData)252_storage)dyn_storage)": {
              "label": "mapping(address => struct Insure.ActiveTakerData[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)270_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Insure.ProviderData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProviderData)270_storage)": {
              "label": "mapping(uint256 => struct Insure.ProviderData)",
              "numberOfBytes": "32"
            },
            "t_struct(ActiveTakerData)252_storage": {
              "label": "struct Insure.ActiveTakerData",
              "members": [
                {
                  "label": "provider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ProviderData)270_storage": {
              "label": "struct Insure.ProviderData",
              "members": [
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "customOracle": {
        "src": "contracts\\Insure.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiryPriceLevel(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "CustomOracle": {
        "src": "contracts\\CustomOracle.sol:7",
        "version": {
          "withMetadata": "ac791beb6bbbf677910fa5e0ee7674e7272cba06116072afe89d10cfa56cf1fe",
          "withoutMetadata": "4df4489ddf4750e7404dd10d38961bfa45b66c912414b00ea79c32dfafe5212d",
          "linkedWithoutMetadata": "4df4489ddf4750e7404dd10d38961bfa45b66c912414b00ea79c32dfafe5212d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256[])",
          "setExpiryPrice(uint256,uint256)",
          "getExpiryPriceLevel(uint256)",
          "makeCorrection(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CustomOracle",
            "src": "contracts\\CustomOracle.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "CustomOracle",
              "src": "contracts\\CustomOracle.sol:8"
            },
            {
              "label": "expiryDatePrice",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "CustomOracle",
              "src": "contracts\\CustomOracle.sol:9"
            },
            {
              "label": "expiryAvailable",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "CustomOracle",
              "src": "contracts\\CustomOracle.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Oracle": {
        "src": "contracts\\CustomOracle.sol:7",
        "version": {
          "withMetadata": "c8a8460de64e5022667d785d7e98a8374c4189b15884435e0bce29dd65de4350",
          "withoutMetadata": "4df4489ddf4750e7404dd10d38961bfa45b66c912414b00ea79c32dfafe5212d",
          "linkedWithoutMetadata": "4df4489ddf4750e7404dd10d38961bfa45b66c912414b00ea79c32dfafe5212d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256[])",
          "setExpiryPrice(uint256,uint256)",
          "getExpiryPriceLevel(uint256)",
          "makeCorrection(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "contracts\\CustomOracle.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts\\CustomOracle.sol:8"
            },
            {
              "label": "expiryDatePrice",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Oracle",
              "src": "contracts\\CustomOracle.sol:9"
            },
            {
              "label": "expiryAvailable",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Oracle",
              "src": "contracts\\CustomOracle.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\interfaces\\AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "08295699790c674c5574539ced5280dbb163cab91795b07eb9175feafd7c5c02",
          "withoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448",
          "linkedWithoutMetadata": "7e7a4d2dea64835b308c8a359c3029d74988a4318ba8ef4240ab30513edfd448"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\Insure.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Oracle": {
        "src": "contracts\\CustomOracle.sol:7",
        "version": {
          "withMetadata": "88d30bc01cbfd5c044e2f1468d43e3638a2864b5046c458710a49a730416aa72",
          "withoutMetadata": "c147899c5cd3ea873d86f8ec56fba47d0ceb872d2a1acf433e73b78eec18a76a",
          "linkedWithoutMetadata": "c147899c5cd3ea873d86f8ec56fba47d0ceb872d2a1acf433e73b78eec18a76a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256[])",
          "setExpiryPrice(uint256,uint256)",
          "getExpiryPriceLevel(uint256)",
          "makeCorrection(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "contracts\\CustomOracle.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts\\CustomOracle.sol:8"
            },
            {
              "label": "expiryDatePrice",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Oracle",
              "src": "contracts\\CustomOracle.sol:9"
            },
            {
              "label": "expiryAvailable",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Oracle",
              "src": "contracts\\CustomOracle.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DAI": {
        "src": "contracts\\DAI.sol:7",
        "version": {
          "withMetadata": "0699da068b41a504ceb64bc23ebd9b6d5dd092075444925bf77048c167c71295",
          "withoutMetadata": "1ad8cc0f5fecfb6aa65ba5fcdc877428171f19bd484c989668aef6b331de82aa",
          "linkedWithoutMetadata": "1ad8cc0f5fecfb6aa65ba5fcdc877428171f19bd484c989668aef6b331de82aa"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DAI",
            "src": "contracts\\DAI.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Insure": {
        "src": "contracts\\Insure.sol:43",
        "version": {
          "withMetadata": "f677778c9fa0b74527d1aac92f2185bb35b08a48069a1425b9dbb63c6e460e81",
          "withoutMetadata": "cd067ce03ec3cece15ea8f5cb6187c04186f80da0e6eb67b33ef300083718862",
          "linkedWithoutMetadata": "cd067ce03ec3cece15ea8f5cb6187c04186f80da0e6eb67b33ef300083718862"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256[],address)",
          "setOracle(address)",
          "setProviderInfo(uint256,uint256,uint256,uint256)",
          "deleteAllProviderPolicies(uint256)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "openPolicy(address,uint256,uint256,uint256)",
          "checkPolicies(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Insure",
            "src": "contracts\\Insure.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:47"
            },
            {
              "label": "usdAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:48"
            },
            {
              "label": "oracle",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:49"
            },
            {
              "label": "expiryDates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:50"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:75"
            },
            {
              "label": "activeTakersPolicies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(ActiveTakerData)1258_storage)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:83"
            },
            {
              "label": "activeProviderTakers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:86"
            },
            {
              "label": "providers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)1276_storage))",
              "contract": "Insure",
              "src": "contracts\\Insure.sol:92"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(ActiveTakerData)1258_storage)dyn_storage": {
              "label": "struct Insure.ActiveTakerData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(ActiveTakerData)1258_storage)dyn_storage)": {
              "label": "mapping(address => struct Insure.ActiveTakerData[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ProviderData)1276_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Insure.ProviderData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProviderData)1276_storage)": {
              "label": "mapping(uint256 => struct Insure.ProviderData)",
              "numberOfBytes": "32"
            },
            "t_struct(ActiveTakerData)1258_storage": {
              "label": "struct Insure.ActiveTakerData",
              "members": [
                {
                  "label": "provider",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ProviderData)1276_storage": {
              "label": "struct Insure.ProviderData",
              "members": [
                {
                  "label": "lots",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "customOracle": {
        "src": "contracts\\Insure.sol:39",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiryPriceLevel(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PriceConsumerV3": {
        "src": "contracts\\Oracle.sol:7",
        "version": {
          "withMetadata": "79ea9ceb45c806428ce158756e5ae5a40ec6dc97e3a2d1bc4988125f9180a0e0",
          "withoutMetadata": "ceb7d0617021e2ae216e1547d48765791e5c134a54fbb97a5b09e70094da1b27",
          "linkedWithoutMetadata": "ceb7d0617021e2ae216e1547d48765791e5c134a54fbb97a5b09e70094da1b27"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PriceConsumerV3",
            "src": "contracts\\Oracle.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "PriceConsumerV3",
              "src": "contracts\\Oracle.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PRBMath": {
        "src": "contracts\\library\\PRBMath.sol:97",
        "version": {
          "withMetadata": "022c9bc5ea3b3a6193a51a5db8657b5d6deb630bf05899f6a319d4611136317c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PRBMathUD60x18": {
        "src": "contracts\\library\\PRBMathUD60x18.sol:12",
        "version": {
          "withMetadata": "86cf94700227a4d91e50eb3936beed2aee87da83ad3e7d00f78b863840d6667e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "PRBMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}