/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CustomOracle,
  CustomOracleInterface,
} from "../../../contracts/CustomOracle.sol/CustomOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_expiryDates",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "expiryAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "expiryDatePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256",
      },
    ],
    name: "getExpiryPriceLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "makeCorrection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setExpiryPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d4738038062000d478339818101604052810190620000379190620001c8565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b81518110156200010757600160026000848481518110620000c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620000fe90620002a5565b9150506200007a565b50506200037c565b600062000126620001208462000236565b6200020d565b905080838252602082019050828560208602820111156200014657600080fd5b60005b858110156200017a57816200015f8882620001b1565b84526020840193506020830192505060018101905062000149565b5050509392505050565b600082601f8301126200019657600080fd5b8151620001a88482602086016200010f565b91505092915050565b600081519050620001c28162000362565b92915050565b600060208284031215620001db57600080fd5b600082015167ffffffffffffffff811115620001f657600080fd5b620002048482850162000184565b91505092915050565b6000620002196200022c565b90506200022782826200026f565b919050565b6000604051905090565b600067ffffffffffffffff82111562000254576200025362000322565b5b602082029050602081019050919050565b6000819050919050565b6200027a8262000351565b810181811067ffffffffffffffff821117156200029c576200029b62000322565b5b80604052505050565b6000620002b28262000265565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620002e857620002e7620002f3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6200036d8162000265565b81146200037957600080fd5b50565b6109bb806200038c6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631fdfde65146100675780633730fad1146100835780633d763b771461009f5780636984205f146100cf57806372eaac1f146100ff5780638da5cb5b1461012f575b600080fd5b610081600480360381019061007c91906105d3565b61014d565b005b61009d600480360381019061009891906105d3565b6102b5565b005b6100b960048036038101906100b491906105aa565b61045e565b6040516100c69190610804565b60405180910390f35b6100e960048036038101906100e491906105aa565b610539565b6040516100f69190610729565b60405180910390f35b610119600480360381019061011491906105aa565b610559565b6040516101269190610804565b60405180910390f35b610137610571565b604051610144919061070e565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d2906107a4565b60405180910390fd5b600115156002600084815260200190815260200160002060009054906101000a900460ff16151514610242576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023990610744565b60405180910390fd5b600060016000848152602001908152602001600020541415610299576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610290906107e4565b60405180910390fd5b8060016000848152602001908152602001600020819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610343576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033a906107a4565b60405180910390fd5b600115156002600084815260200190815260200160002060009054906101000a900460ff161515146103aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a190610744565b60405180910390fd5b8142116103ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e390610784565b60405180910390fd5b6000600160008481526020019081526020016000205414610442576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610439906107c4565b60405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000600115156002600084815260200190815260200160002060009054906101000a900460ff161515146104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be90610744565b60405180910390fd5b60006001600084815260200190815260200160002054141561051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051590610764565b60405180910390fd5b60016000838152602001908152602001600020549050919050565b60026020528060005260406000206000915054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506105a48161096e565b92915050565b6000602082840312156105bc57600080fd5b60006105ca84828501610595565b91505092915050565b600080604083850312156105e657600080fd5b60006105f485828601610595565b925050602061060585828601610595565b9150509250929050565b61061881610830565b82525050565b61062781610842565b82525050565b600061063a601d8361081f565b915061064582610878565b602082019050919050565b600061065d60198361081f565b9150610668826108a1565b602082019050919050565b600061068060168361081f565b915061068b826108ca565b602082019050919050565b60006106a360168361081f565b91506106ae826108f3565b602082019050919050565b60006106c660118361081f565b91506106d18261091c565b602082019050919050565b60006106e960108361081f565b91506106f482610945565b602082019050919050565b6107088161086e565b82525050565b6000602082019050610723600083018461060f565b92915050565b600060208201905061073e600083018461061e565b92915050565b6000602082019050818103600083015261075d8161062d565b9050919050565b6000602082019050818103600083015261077d81610650565b9050919050565b6000602082019050818103600083015261079d81610673565b9050919050565b600060208201905081810360008301526107bd81610696565b9050919050565b600060208201905081810360008301526107dd816106b9565b9050919050565b600060208201905081810360008301526107fd816106dc565b9050919050565b600060208201905061081960008301846106ff565b92915050565b600082825260208201905092915050565b600061083b8261084e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e6f20636f6e747261637420776974682074686973206578706972792e000000600082015250565b7f44617461206973207374696c6c20756e617661696c61626c6500000000000000600082015250565b7f45787069727920213c2063757272656e7454696d652e00000000000000000000600082015250565b7f4f6e6c79206f776e65722063616e20646f207468697300000000000000000000600082015250565b7f4461746120616c7265616479207365742e000000000000000000000000000000600082015250565b7f44617461206973206e6f74207365742e00000000000000000000000000000000600082015250565b6109778161086e565b811461098257600080fd5b5056fea26469706673582212206945a200fc489f5feb02c184594c718da7cdbb42a477786e842a86987428015b64736f6c63430008040033";

type CustomOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomOracle__factory extends ContractFactory {
  constructor(...args: CustomOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _expiryDates: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CustomOracle> {
    return super.deploy(_expiryDates, overrides || {}) as Promise<CustomOracle>;
  }
  override getDeployTransaction(
    _expiryDates: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_expiryDates, overrides || {});
  }
  override attach(address: string): CustomOracle {
    return super.attach(address) as CustomOracle;
  }
  override connect(signer: Signer): CustomOracle__factory {
    return super.connect(signer) as CustomOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomOracleInterface {
    return new utils.Interface(_abi) as CustomOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CustomOracle {
    return new Contract(address, _abi, signerOrProvider) as CustomOracle;
  }
}
