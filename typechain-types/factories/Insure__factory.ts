/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Insure, InsureInterface } from "../Insure";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_expiryDates",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "NewPolicyAvailability",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lots",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "policyPaid",
        type: "bool",
      },
    ],
    name: "PositionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lots",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PositionOpened",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "activeProviderTakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "activeTakersPolicies",
    outputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lots",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "checkPolicies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256",
      },
    ],
    name: "deleteAllProviderPolicies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositAsProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "expiryDates",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_providerAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lots",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_level",
        type: "uint256",
      },
    ],
    name: "openPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "lots",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lots",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setProviderInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019af380380620019af8339818101604052810190620000379190620001c7565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b815181101562000106576001806000848481518110620000c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620000fd90620002a4565b9150506200007a565b50506200037b565b6000620001256200011f8462000235565b6200020c565b905080838252602082019050828560208602820111156200014557600080fd5b60005b858110156200017957816200015e8882620001b0565b84526020840193506020830192505060018101905062000148565b5050509392505050565b600082601f8301126200019557600080fd5b8151620001a78482602086016200010e565b91505092915050565b600081519050620001c18162000361565b92915050565b600060208284031215620001da57600080fd5b600082015167ffffffffffffffff811115620001f557600080fd5b620002038482850162000183565b91505092915050565b6000620002186200022b565b90506200022682826200026e565b919050565b6000604051905090565b600067ffffffffffffffff82111562000253576200025262000321565b5b602082029050602081019050919050565b6000819050919050565b620002798262000350565b810181811067ffffffffffffffff821117156200029b576200029a62000321565b5b80604052505050565b6000620002b18262000264565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620002e757620002e6620002f2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6200036c8162000264565b81146200037857600080fd5b50565b611624806200038b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610165578063aa4bfddb14610183578063cc246928146101b5578063ce8e80c1146101d1578063e3d670d714610201578063f459315614610231576100a9565b8063060491c5146100ae578063065689ab146100ca5780631a4334be146100fa57806364e5b42f1461011657806373db107e14610132575b600080fd5b6100c860048036038101906100c39190610fa1565b61024d565b005b6100e460048036038101906100df9190610fca565b61034c565b6040516100f191906111d1565b60405180910390f35b610114600480360381019061010f9190611069565b61039a565b005b610130600480360381019061012b9190611069565b610408565b005b61014c60048036038101906101479190610fca565b61044f565b60405161015c94939291906111ec565b60405180910390f35b61016d6104bc565b60405161017a91906111d1565b60405180910390f35b61019d60048036038101906101989190610fca565b6104e0565b6040516101ac93929190611307565b60405180910390f35b6101cf60048036038101906101ca9190611006565b610517565b005b6101eb60048036038101906101e69190611069565b610b8a565b6040516101f89190611231565b60405180910390f35b61021b60048036038101906102169190610fa1565b610baa565b60405161022891906112ec565b60405180910390f35b61024b60048036038101906102469190611092565b610bc2565b005b60005b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156103485742600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610312577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060040201600301541015610335576103348282610c54565b5b80806103409061147b565b915050610250565b5050565b6004602052816000526040600020818154811061036857600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060008082016000905560018201600090556002820160009055505050565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b6003602052816000526040600020818154811061046b57600080fd5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154905083565b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000015410156105ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a49061124c565b60405180910390fd5b80600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206001015414610642576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106399061128c565b60405180910390fd5b60648261064f91906113a5565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c6906112cc565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206002015461072e91906113a5565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116107ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a59061126c565b60405180910390fd5b600115156001600085815260200190815260200160002060009054906101000a900460ff16151514610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080c906112ac565b60405180910390fd5b808261082191906113a5565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461086f91906113ff565b92505081905550600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060020154826108d591906113a5565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461092391906113ff565b9250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206002015461098991906113a5565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109d7919061134f565b92505081905550600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200185815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b60016020528060005260406000206000915054906101000a900460ff1681565b60026020528060005260406000206000915090505481565b604051806060016040528084815260200183815260200182815250600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505050505050565b6000606c905080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610cd2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060040201600201541015610dd9576064600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610d63577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906004020160010154610d7f91906113a5565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dcd919061134f565b92505081905550610f72565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610e52577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506064600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110610eff577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906004020160010154610f1b91906113a5565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f69919061134f565b92505081905550505b505050565b600081359050610f86816115c0565b92915050565b600081359050610f9b816115d7565b92915050565b600060208284031215610fb357600080fd5b6000610fc184828501610f77565b91505092915050565b60008060408385031215610fdd57600080fd5b6000610feb85828601610f77565b9250506020610ffc85828601610f8c565b9150509250929050565b6000806000806080858703121561101c57600080fd5b600061102a87828801610f77565b945050602061103b87828801610f8c565b935050604061104c87828801610f8c565b925050606061105d87828801610f8c565b91505092959194509250565b60006020828403121561107b57600080fd5b600061108984828501610f8c565b91505092915050565b600080600080608085870312156110a857600080fd5b60006110b687828801610f8c565b94505060206110c787828801610f8c565b93505060406110d887828801610f8c565b92505060606110e987828801610f8c565b91505092959194509250565b6110fe81611433565b82525050565b61110d81611445565b82525050565b6000611120600f8361133e565b915061112b826114f3565b602082019050919050565b6000611143601b8361133e565b915061114e8261151c565b602082019050919050565b600061116660158361133e565b915061117182611545565b602082019050919050565b600061118960198361133e565b91506111948261156e565b602082019050919050565b60006111ac601e8361133e565b91506111b782611597565b602082019050919050565b6111cb81611471565b82525050565b60006020820190506111e660008301846110f5565b92915050565b600060808201905061120160008301876110f5565b61120e60208301866111c2565b61121b60408301856111c2565b61122860608301846111c2565b95945050505050565b60006020820190506112466000830184611104565b92915050565b6000602082019050818103600083015261126581611113565b9050919050565b6000602082019050818103600083015261128581611136565b9050919050565b600060208201905081810360008301526112a581611159565b9050919050565b600060208201905081810360008301526112c58161117c565b9050919050565b600060208201905081810360008301526112e58161119f565b9050919050565b600060208201905061130160008301846111c2565b92915050565b600060608201905061131c60008301866111c2565b61132960208301856111c2565b61133660408301846111c2565b949350505050565b600082825260208201905092915050565b600061135a82611471565b915061136583611471565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561139a576113996114c4565b5b828201905092915050565b60006113b082611471565b91506113bb83611471565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113f4576113f36114c4565b5b828202905092915050565b600061140a82611471565b915061141583611471565b925082821015611428576114276114c4565b5b828203905092915050565b600061143e82611451565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061148682611471565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114b9576114b86114c4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e6f7420656e6f756768206c6f74730000000000000000000000000000000000600082015250565b7f54616b657320686173206e6f7420656e6f7567682066756e64732e0000000000600082015250565b7f57726f6e6720696e737572616e6365206c6576656c0000000000000000000000600082015250565b7f4578706972792064617465206973206e6f742076616c69642e00000000000000600082015250565b7f50726f766964657220686173206e6f7420656e6f7567682066756e64732e0000600082015250565b6115c981611433565b81146115d457600080fd5b50565b6115e081611471565b81146115eb57600080fd5b5056fea26469706673582212206fbe6ee26c321fa591ecde7ba1f5c5e399583a0f999da4a3948e19cc887a403664736f6c63430008040033";

type InsureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InsureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Insure__factory extends ContractFactory {
  constructor(...args: InsureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _expiryDates: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Insure> {
    return super.deploy(_expiryDates, overrides || {}) as Promise<Insure>;
  }
  override getDeployTransaction(
    _expiryDates: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_expiryDates, overrides || {});
  }
  override attach(address: string): Insure {
    return super.attach(address) as Insure;
  }
  override connect(signer: Signer): Insure__factory {
    return super.connect(signer) as Insure__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InsureInterface {
    return new utils.Interface(_abi) as InsureInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Insure {
    return new Contract(address, _abi, signerOrProvider) as Insure;
  }
}
